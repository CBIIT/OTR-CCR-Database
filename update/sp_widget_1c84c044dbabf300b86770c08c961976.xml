<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, spModal, $location, $http, $timeout, $uibModal, spUtil) {
	$.fn.tooltip = angular.noop;

	/* widget controller */
	var c = this;

	var sessionId = c.data.session;
	var flag = true;

	$timeout(removeButtons);
	$timeout(returnButton);

	// save prompt
	$scope.$on("sp.form.record.updated", function(ev, params) {
		if (flag) {
			flag = false;
			spModal.open({
				title: 'Success',
				message: 'Data has been saved'
			})
				.then(function() {
				removeButtons();
				returnButton();
			});
		}
	});

	if (c.data.table == 'x_naci_otr_ccr_dat_contact') {
		// ned search link and hide user_id field
		$scope.$on('spModel.fields.rendered', function(event) {
			c.g_form = event.targetScope.getGlideForm();
			//console.log(c.g_form);
			c.g_form.setVisible('user_id', false);
			$timeout(addSearch);
			if (c.data.sys_id == "-1") {
				$timeout(addSave);
				$timeout($('button:contains("Save ")')
								 .hide())
			}
		});

	}

	// custom save with validation
	saveContact = function() {
		$http.get('/api/x_naci_otr_ccr_dat/data/addContact', {
			params: { 
				name: c.g_form.getValue('name'),
				user_id: c.g_form.getValue('user_id'),
				organization: c.g_form.getValue('organization'),
				phone: c.g_form.getValue('phone'),
				notes: c.g_form.getValue('notes'),
				department: c.g_form.getValue('department'),
				suffix: c.g_form.getValue('suffix'),
				mobile: c.g_form.getValue('mobile'),
				email: c.g_form.getValue('email'),
				email_2: c.g_form.getValue('email_2'),
				job_title: c.g_form.getValue('job_title')
			}
		}).then(function(response) {
			if (response.data.result.toString() == "incomplete") {
				spModal.open({
					title: 'Error',
					message: 'Name and Organization fields are required'
				})
			} else if (response.data.result) {
				c.g_form.save();
			} else {
				spModal.open({
					title: 'Error',
					message: c.g_form.getValue('name') 
					+ ' of ' + c.g_form.getDisplayValue('organization')
					+ ' already exists'
				})
			}
		})
	}


	// automatically select project reference
	if (c.data.table == 'x_naci_otr_ccr_dat_project_notes' && c.data.sys_id == '-1') {
		$scope.$on('spModel.fields.rendered', function(event) {
			c.g_form = event.targetScope.getGlideForm();
			c.g_form.setValue('project_id', c.data.project_id);
			c.g_form.setVisible('project_id', false);
		});
	}

	// automatically set tp reference
	var tpTables = [
		'x_naci_otr_ccr_dat_tp_status',
		'x_naci_otr_ccr_dat_tp_outcome',
		'x_naci_otr_ccr_dat_tp_indication'
	];
	if (tpTables.indexOf(c.data.table) > -1) {
		$scope.$on('spModel.fields.rendered', function(event) {
			c.g_form = event.targetScope.getGlideForm();
			c.g_form.setValue('technologies_product', c.data.tp_id);
			c.g_form.setReadOnly('technologies_product', true);
		});
	}

	// ned modal
	function openModal() {
		$('#error').addClass('d-none').removeClass('d-block')
		$uibModal.open({
			template: $('#ned-modal').prop('innerHTML'),
			controller: function($scope, $http) {
				$scope.userSearch = null;


				$scope.addName = function() {
					var search_keys = Object.keys($scope.userSearch);
					search_keys.forEach(function(key) {
						if ($scope.userSearch[key] && $scope.userSearch[key].length > 0) {
							c.g_form.setValue(key, $scope.userSearch[key])
							c.g_form.setReadOnly(key, true);
						}
					})
					// set organization to NCI
					if ($scope.userSearch.department == 'NCI') {
						c.g_form.setValue('organization', 'e604d3dedba17b00fdd2ff621f96193a')
						c.g_form.setReadOnly('organization', true);
					}
					$scope.$close();
				}

				// reject add user if already exists
				$scope.checkExists = function() {
					$http.get('/api/x_naci_otr_ccr_dat/data/validateContactNed', {
						params: { id: $scope.userSearch.user_id }
					}).then(function(response) {
						if (response.data.result) {
							$('#error').removeClass('d-none').addClass('d-block')
						} else {
							$('#error').addClass('d-none').removeClass('d-block')
							$scope.addName();
						}
					})
				}

				$scope.search = function(term) {
					var temp = "";
					if (term.indexOf(",") >= 0) {
						temp = term.split(",");
						var length = temp.length;
						if (length > 1) {
							term = temp[1].trim() + " " + temp[0].trim();
						} else {
							term = temp[0];
						}
					}
					return $http.get('/api/x_naci_otr_ccr_dat/data/fetchUserList', {
						params: { term: term, limit: 10 }
					}).then(function(response) {
						return response.data.result;
					});
				}
			}
		})		
	}

	// hide "insert" buttons
	function removeButtons() {
		flag = true;
		$('#table-form .panel-footer button:not(:last)').hide();
	}

	// add save button
	function addSave() {
		$('<button>')
			.text('Save')
			.click(saveContact)
			.css('float', 'right')
			.css('width', '100px')
			.addClass('btn btn-primary')
			.insertAfter($('button:contains("Save ")'))
	}

	// add return button
	function returnButton() {
		//	$scope.$on('spModel.fields.rendered', function(event) {
		$('<button>')
			.text('Return')
			.click(function() {window.history.back()})
			.css('float', 'left')
			.css('width', '100px')
			.addClass('btn btn-default')
			.insertBefore($('button:contains("Save "):first'))
		//	});
	}

	// add NED search button
	function addSearch() {
		$('<button>')
			.addClass('btn btn-link ml-4 p-0')
			.text('Add From NED Directory')
			.click(openModal)
			.appendTo(
			$('label.field-label.ng-binding.ng-scope:first')
		);
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>_ccr_db__table_add</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>[ccr-db] table add</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	var tableName = $sp.getParameter('table');
	var sys_id = $sp.getParameter('sys_id');
	data.table = tableName;
	data.sys_id = sys_id;

	// associative sys ids 
	data.project_id = $sp.getParameter('project_id');
	data.tp_id = $sp.getParameter('tp_id');
	
	data.session = gs.getSessionID();
	
	
	/*
	data.formOptions = {
		"title": "Adding Record",
		"widget": "widget-form",
		"widgetInput": {
			"sys_id": "-1",
			"table": tableName,
			"view": "Create"
		}
		,
		"buttons": [],
	};
		*/
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>chop2@nih.gov</sys_created_by>
        <sys_created_on>2019-08-23 14:46:44</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>1c84c044dbabf300b86770c08c961976</sys_id>
        <sys_mod_count>464</sys_mod_count>
        <sys_name>[ccr-db] table add</sys_name>
        <sys_package display_value="OTR-CCR Database" source="x_naci_otr_ccr_dat">b3675f1cdbd32340b86770c08c961913</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="OTR-CCR Database">b3675f1cdbd32340b86770c08c961913</sys_scope>
        <sys_update_name>sp_widget_1c84c044dbabf300b86770c08c961976</sys_update_name>
        <sys_updated_by>chop2@nih.gov</sys_updated_by>
        <sys_updated_on>2019-10-29 20:32:14</sys_updated_on>
        <template><![CDATA[<div id="table-form">
  <widget id="widget-form">
  </widget>
</div>

<div id="ned-modal" class="d-none" ng-non-bindable>
  <div class="modal-header">
    <h4 class="modal-title" id="modal-title">
      NED Directory Search
    </h4>
  </div>
  <div class="modal-body" id="modal-body">
    <div class="form-group">
      <label id="error" class="d-none text-danger">Contact already exists</label>
      <label class="control-label" for="nedSearch">Name</label>
      <input id="nedSearch" 
             class="form-control"
             ng-model="userSearch" 
             ng-model-options="{debounce: 100}"
             typeahead-append-to="body"
             uib-typeahead="item as item.name for item in search($viewValue)">
    </div>
  </div>
  <div class="modal-footer">
    <button type="button" class="btn btn-default" ng-click="$close()">Cancel</button>
    <button ng-disabled="!userSearch"
            ng-click="checkExists()" type="button" class="btn btn-primary">Add</button>
  </div>  
</div>


]]></template>
    </sp_widget>
</record_update>
